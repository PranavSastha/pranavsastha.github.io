// Breakpoint SCSS File - Fully Fixed
@import "sass-mq"; // Ensure this dependency is correctly installed

// Define breakpoints (Added missing values)
$breakpoints: (
  small: 480px,
  medium: 768px,
  large: 1024px,
  custom: 600px,
  wide: 925px,
  extra-wide: 1280px,
  max-small: 599px,  // Added max-width version for 600px
  max-medium: 767px, // Added max-width version for 768px
  max-large: 1023px  // Added max-width version for 1024px
);

// Example mixin for responsive behavior
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found!";
  }
}

// **Fixed `breakpoint-set` mixin**
@mixin breakpoint-set($breakpoint, $convert-to-ems: false) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    
    // Convert to ems if requested
    @if $convert-to-ems == true {
      $value: ($value / 16) + em;
    }

    @media (min-width: $value) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found!";
  }
}

// **Improved `breakpoint` Mixin - Handles both `min-width` and `max-width`**
@mixin breakpoint($breakpoint, $max: false) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);

    @if $max == true {
      @media (max-width: $value) {
        @content;
      }
    } @else {
      @media (min-width: $value) {
        @content;
      }
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found!";
  }
}
